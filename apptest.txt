import { useMemo, useState } from "react";

import SummaryCard from "./components/SummaryCard";
import InvoiceList from "./components/InvoiceList";
import InvoiceDetailsModal from "./components/InvoiceDetailsModal";
import useInvoices from "./Hooks/useInvoices";
import AddInvoiceForm from "./Components/AddInvoiceForm";


export default function App() {
  const [open, setOpen] = useState(false);
  const [current, setCurrent] = useState(null);

  const { data: invoices = [], isLoading, isError } = useInvoices();

  const metrics = useMemo(() => {
    const total = invoices.length || 1;
    const count = (s) => invoices.filter(i => i.status === s).length;
    return {
      approvedPct: Math.round((count("Approved") / total) * 100),
      pendingPct: Math.round((count("Pending") / total) * 100),
      mismatchPct: Math.round((count("Mismatch") / total) * 100),
      total,
    };
  }, [invoices]);

  const openModal = (inv) => { setCurrent(inv); setOpen(true); };
  const closeModal = () => setOpen(false);

  if (isLoading) return <p className="p-6">Loading invoices...</p>;
  if (isError) return <p className="p-6 text-red-600">Failed to load invoices.</p>;


  return (
    <div className="min-h-screen p-6 md:p-10">
      <header className="mb-6 flex flex-wrap items-center justify-between gap-4">
        <h1 className="text-2xl md:text-3xl font-bold">Invoice Automation Dashboard</h1>
        <div className="text-xs text-gray-500">{metrics.total} invoices</div>
      </header>

      <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
        <div className="space-y-4">
          <SummaryCard title="Approved" value={`${metrics.approvedPct}%`} percent={metrics.approvedPct} />
          <SummaryCard title="Pending" value={`${metrics.pendingPct}%`} percent={metrics.pendingPct} />
          <SummaryCard title="Mismatched" value={`${metrics.mismatchPct}%`} percent={metrics.mismatchPct} />
        </div>

        <div className="lg:col-span-2">
          <AddInvoiceForm />
          <InvoiceList invoices={invoices} onOpen={openModal} />
        </div>
      </div>

      <InvoiceDetailsModal open={open} onClose={closeModal} invoice={current} />
    </div>
  );
}





